generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id            BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userName      String    @unique @db.VarChar(50)
  fullName      String    @db.VarChar(100)
  description   String?   @db.VarChar(250)
  region        String?   @db.VarChar(50)
  mainUrl       String?   @db.VarChar(250)
  avatar        Bytes?    @db.ByteA
  messages      Message[]
  followers     Follow[]  @relation("Follower")
  followed      Follow[]  @relation("Followed")  
}

model Follow {
  id          BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  follower    Profile   @relation("Follower", fields: [followerId], references: [id])
  followerId  BigInt
  followed    Profile   @relation("Followed", fields: [followedId], references: [id])
  followedId  BigInt
}

model Message {
  id                            BigInt              @id @default(autoincrement()) @db.BigInt
  createdAt                     DateTime            @default(now())
  updatedAt                     DateTime            @updatedAt
  author                        Profile             @relation(fields: [authorId], references: [id])
  authorId                      BigInt
  body                          String              @db.VarChar(150)
  likes                         Int                 @default(0)
  image                         Bytes?              @db.ByteA
  responderMessageResponses     MessageResponse[]   @relation("ResponderMessageResponse")  
  respondedMessageResponses     MessageResponse[]   @relation("RespondedMessageResponse")  
  broadcasterMessageBroadcasts  MessageBroadcast[]  @relation("BroadcasterMessageBroadcast")
  broadcastMessageBroadcasts    MessageBroadcast[]  @relation("BroadcastMessageBroadcast")
}

model MessageResponse {
  id              BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  responderMsg    Message   @relation("ResponderMessageResponse", fields: [responderMsgId], references: [id])
  responderMsgId  BigInt
  respondedMsg    Message   @relation("RespondedMessageResponse", fields: [respondedMsgId], references: [id])
  respondedMsgId  BigInt
}

model MessageBroadcast {
  id                  BigInt    @id  @default(autoincrement()) @db.BigInt
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt 
  broadcasterMsg      Message   @relation("BroadcasterMessageBroadcast", fields: [broadcasterMsgId], references: [id])
  broadcasterMsgId    BigInt
  broadcastMsg        Message   @relation("BroadcastMessageBroadcast", fields: [broadcastMsgId], references: [id])
  broadcastMsgId      BigInt
  additionalMessage   String?   @db.VarChar(140)
}